<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/MsBuild/2003" ToolsVersion="4.0">

  <PropertyGroup>
    <XmlTransforDllPath Condition="'$(XmlTransforDllPath)' == '' Or !Exists($(XmlTransforDllPath))">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(VisualStudioVersion)\Web\Microsoft.Web.XmlTransform.dll</XmlTransforDllPath>
    <XmlTransforDllPath Condition="!Exists($(XmlTransforDllPath))">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v$(MSBuildToolsVersion)\Web\Microsoft.Web.XmlTransform.dll</XmlTransforDllPath>
    <XmlTransforDllPath Condition="!Exists($(XmlTransforDllPath))">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v14.0\Web\Microsoft.Web.XmlTransform.dll</XmlTransforDllPath>
    <XmlTransforDllPath Condition="!Exists($(XmlTransforDllPath))">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v13.0\Web\Microsoft.Web.XmlTransform.dll</XmlTransforDllPath>
    <XmlTransforDllPath Condition="!Exists($(XmlTransforDllPath))">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v12.0\Web\Microsoft.Web.XmlTransform.dll</XmlTransforDllPath>
    <XmlTransforDllPath Condition="!Exists($(XmlTransforDllPath))">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v11.0\Web\Microsoft.Web.XmlTransform.dll</XmlTransforDllPath>
    <!--Windows ps 7-->
    <PowerShellExe Condition=" '$(PowerShellExe)'=='' And Exists('$(ProgramFiles)\powershell\pwsh.exe')">$(ProgramFiles)\powershell\pwsh.exe</PowerShellExe>
    <!--Mac ps 7/6-->
    <PowerShellExe Condition=" '$(PowerShellExe)'=='' And Exists('/usr/local/microsoft/powershell/7/pwsh')">/usr/local/microsoft/powershell/7/pwsh</PowerShellExe>
    <PowerShellExe Condition=" '$(PowerShellExe)'=='' And Exists('/usr/local/microsoft/powershell/6/pwsh')">/usr/local/microsoft/powershell/6/pwsh</PowerShellExe>
    <PowerShellExe Condition=" '$(PowerShellExe)'=='' And Exists('/usr/microsoft/powershell/7/pwsh')">/usr/microsoft/powershell/7/pwsh</PowerShellExe>
    <PowerShellExe Condition=" '$(PowerShellExe)'=='' And Exists('/usr/microsoft/powershell/6/pwsh')">/usr/microsoft/powershell/6/pwsh</PowerShellExe>
    <!--Check SysNative first (32 bit app, switch to 64 bit powershell if possible)-->
    <PowerShellExe Condition=" '$(PowerShellExe)'=='' And Exists('$(windir)\SysNative\WindowsPowerShell\v1.0\powershell.exe')">$(windir)\SysNative\WindowsPowerShell\v1.0\powershell.exe</PowerShellExe>
    <!--Fallback to system32-->
    <PowerShellExe Condition=" '$(PowerShellExe)'=='' And Exists('$(windir)\System32\WindowsPowerShell\v1.0\powershell.exe')">$(windir)\System32\WindowsPowerShell\v1.0\powershell.exe</PowerShellExe>
    <MW_PS_CB_ConfigBuilderPowershellScriptLocation Condition=" '$(MW_PS_CB_ConfigBuilderPowershellScriptLocation)'=='' ">$(MSBuildThisFileDirectory)..\tools\ConfigBuilder.ps1</MW_PS_CB_ConfigBuilderPowershellScriptLocation>
    <MW_PS_CB_ErrorText>ConfigBuilder cannot continue: File is missing; '{0}'</MW_PS_CB_ErrorText>
  </PropertyGroup>

  <PropertyGroup>
    <BuildDependsOn>
      ConfigBuilder;
      $(BuildDependsOn);
    </BuildDependsOn>
  </PropertyGroup>

  <Target Name="ConfigBuilder">
    <Error Condition="!Exists($(MW_PS_CB_ConfigBuilderPowershellScriptLocation))" Text="$([System.String]::Format('$(MW_PS_CB_ErrorText)', $(MW_PS_CB_ConfigBuilderPowershellScriptLocation)))" />
    <Error Condition="!Exists($(XmlTransforDllPath))" Text="$([System.String]::Format('$(MW_PS_CB_ErrorText)', $(XmlTransforDllPath)))" />
    <!-- <Error Condition="!Exists($(PowerShellExe))" Text="$([System.String]::Format('Missing powershell exe $(ErrorText)', $(PowerShellExe)))" /> -->
    <Exec Command="$(PowerShellExe) -NonInteractive -executionpolicy Unrestricted -command &quot;&amp; { &amp;&apos;$(MW_PS_CB_ConfigBuilderPowershellScriptLocation)&apos; &apos;$(SolutionDir)&apos; &apos;$(ProjectDir)&apos; &apos;$(TargetPath)&apos; &apos;$(Configuration)&apos; &apos;$(XmlTransforDllPath)&apos; &apos;$(ConfigBuilderHost)&apos;;exit $lastexitcode;} &quot;"
          Condition=" Exists('$(MW_PS_CB_ConfigBuilderPowershellScriptLocation)')"/>
  </Target>
</Project>
